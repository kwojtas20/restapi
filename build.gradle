plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'pl.nullpointerexeption'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
compileJava {
	options.compilerArgs << '-parameters'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.ehcache:ehcache:3.8.1'
	implementation 'javax.cache:cache-api:1.1.1'
	implementation 'com.auth0:java-jwt:3.8.3'
	implementation 'org.liquibase:liquibase-core'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	runtimeOnly 'com.h2database:h2'
	implementation 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
task generatePostsAndComments() {
	doLast {
		File dataSql = file("src/main/resources/data.sql") as File
		dataSql.write("")
		//uÅ¼ytkownicy
		for (int i = 1; i <= 11; i++) {
			dataSql.append("insert into user(id, first_name, second_name, surname, created) " +
					"values (${i}, 'First name ${i}', 'Second name ${i}', 'Surname ${i}', '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
		}
		//posty
		for (int i = 1; i <= 100; i++) {
			int userId = (int) (1 + i / 10)
			dataSql.append("insert into post(id, user_id, title, content, created) " +
					"values (${i}, ${userId},'Title ${i}', 'Content ${i}', '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
		}
		//komentarze
		for (int i = 1; i <= 100; i++) {
			int postId = (int) (1 + i / 10)
			dataSql.append("insert into comment(id, post_id, content, created) " +
					"values (${i}, ${postId}, 'Comment ${i}', '"+ LocalDateTime.now().minusDays(100 - i) +"');\n")
		}
	}
}